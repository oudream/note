### git
git submodule add https://github.com/chaconinc/DbConnector
git clone --recursive https://github.com/chaconinc/MainProject
git submodule update --remote DbConnector
git submodule update --remote



### nginx
nginx -c "/ddd/web/nginx/conf-hello-svg/nginx.conf"
nginx -t -c "/ddd/web/nginx/conf-hello-svg/nginx.conf" # 只测试配置文件



### java
export JAVA_HOME=/usr/lib/jvm/java-8-oracle
export JRE_HOME=${JAVA_HOME}/jre
export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib
export HADOOP_HOME=/usr/local/hadoop
export PATH=$PATH:$HADOOP_HOME/bin



### cmake
cmake . -G "Xcode" --build "/ddd/communication/protobuf/protobuf/cmake" -B"/ddd/communication/protobuf/protobuf/cmake-xcode"



### grpc
# hellostreamingworld -> helloworld -> route_guide
CMAKE_CURRENT_BINARY_DIR=/ddd/middle/hello-protobuf-grpc/cmake-build-debug/grpc-hellostreamingworld
hw_proto_path=/ddd/middle/hello-protobuf-grpc/grpc-helloworld/protos
_GRPC_CPP_PLUGIN_EXECUTABLE=/usr/local/bin/grpc_cpp_plugin
hw_proto=/ddd/middle/hello-protobuf-grpc/grpc-helloworld/protos/hellostreamingworld.proto

protoc --grpc_out "${CMAKE_CURRENT_BINARY_DIR}" --cpp_out "${CMAKE_CURRENT_BINARY_DIR}" -I "${hw_proto_path}" --plugin=protoc-gen-grpc="${_GRPC_CPP_PLUGIN_EXECUTABLE}" "${hw_proto}"

Official GitHub mirror: github.com/justinfrankel/licecap



### gcc
./configure --build=i386-linux --host=arm-linux --target=mipsel-linux --prefix=$(pwd)/_install
export LD_LIBRARY_PATH=/.../bin_d:$LD_LIBRARY_PATH



### proxy
git config --global http.proxy http://10.31.58.5:1080
git config --global https.proxy https://10.31.58.5:1080
git config --global --unset http.proxy
git config --global --unset https.proxy

http_proxy="http://10.31.58.78:1080/"
https_proxy="https://10.31.58.78:1080/"
no_proxy=localhost,127.0.0.0,127.0.1.1,127.0.1.1,local.home,10.31.58.86,10.31.58.99,10.31.58.101

127.0.0.1,localhost,10.31.58.19,10.31.58.*,10.31.16.*,hadoop-master,hadoop-slave1,hadoop-slave2



### node.js
node xxx.js
node percent.js m75.07796,155c0,-42.49836 34.42367,-76.92204 76.92204,-76.92204c42.49836,0 76.92204,34.42367 76.92204,76.92204c0,42.49836 -34.42367,76.92204 -76.92204,76.92204c-42.49836,0 -76.92204,-34.42367 -76.92204,-76.92204z



### python

jupyter notebook --no-browser --port 8901 --ip=10.35.191.17

### jupyter password
from notebook.auth import passwd
passwd()
Enter password: 1
Verify password: 1
'sha1:8493e810f097:cffe7bf193dfd17ee26182cfbba826e29c2df795'

jupyter nbconvert --to python --output-dir /ddd/ai/fastai/courses-py/deeplearningning1/nbs/ *.ipynb

python -m http.server 8893 # python3
python -m SimpleHTTPServer 8893 # python2





### find
mac:
touch -t "201802210444" /tmp/start
touch -t "201802210445" /tmp/end
find /usr/local/bin -newer /tmp/start -not -newer /tmp/end
linux:
touch --date "2007-01-01" /tmp/start
touch --date "2008-01-01" /tmp/end
find /data/images -type f -newer /tmp/start -not -newer /tmp/end

find . -iname "*" -type f -exec ln -s /home/oudream/untitled2/{} /fff/a \;

find . -maxdepth 1 -type d | while read dir; do count=$(find "$dir" -type f | wc -l); echo "$dir : $count"; done



### ls
ls -ltT
ls -lR|grep "^-"|wc -l
tree -L 2
find . -maxdepth 1 -type d | while read dir; do count=$(find "$dir" -type f | wc -l); echo "$dir : $count"; done
ls | sed "s:^:`pwd`/:"   # full path
ls | sed "s:^:`pwd`/:" | sed "s/^/$HOSTNAME:/g"
find $PWD -maxdepth 1  | xargs ls -ld



### grep more less sort wc
grep -E 'pattern1.*pattern2' filename
ls -lR | grep '^./\|.ipynb$'



### tmux
# 鼠标设置
touch ~/.tmux.conf
set -g mouse off



### clipboard 
ll | xsel
cat /fff/tmp/000.txt | ssh -X 10.35.191.11 "DISPLAY=:0.0 pbcopy -i"



### expr 注意 $a 后的空格，注意 \< 要有转义符
###  {+, -} {*, /, %} {=, >, >=, <, <=, !=} expr2
f=`expr $a \< $b`
var4=$[$var1 * ($var2 - $var3)] # []
var1=$(echo "scale=4; 3.44 / 5" | bc) # bc 



### 资源
free -m # 查看内存使用量和交换区使用量
uptime # 查看系统运行时间、用户数、负载
df -h # 查看各分区使用情况
du -sh <目录名> # 查看指定目录的大小
du -h -d 1
df -hl
grep MemTotal /proc/meminfo # 查看内存总量
grep MemFree /proc/meminfo # 查看空闲内存量
cat /proc/loadavg # 查看系统负载



### 系统
hostname
uname -a # 查看内核/操作系统/CPU信息
cat /etc/issue
head -n 1 /etc/issue # 查看操作系统版本
cat /proc/cpuinfo # 查看CPU信息
hostname # 查看计算机名
lspci -tv # 列出所有PCI设备
lsusb -tv # 列出所有USB设备
lsmod # 列出加载的内核模块
w
env # 查看环境变量
export # 用来显示和设置环境变量
set -o # 查看当前设置情况
shopt -p # 查看当前设置情况 shopt命令是set命令的一种替代
set # 用来显示shell本地变量
typeset -F # 只列出函数名
declare -F # 只列出函数名

### 磁盘和分区
fdisk -l # 查看所有分区
swapon -s # 查看所有交换分区
hdparm -i /dev/hda # 查看磁盘参数(仅适用于IDE设备)
dmesg | grep IDE # 查看启动时IDE设备检测状况
# mount
mount | column -t # 查看挂接的分区状态
mount -t cifs -o username=Bob,password=123456 //192.168.0.102/Share /usr/local/bin/code
df -h # 查挂载在状态
mount
umount /usr/local/bin/code
sshfs -C -o reconnect oudream@10.31.58.132:/ddd /fff/r132ddd


### 网络
lsof -p 6317 | wc -l
sudo netstat -anp | grep 3306 
sudo lsof -i -P | grep -i "listen"
ifconfig # 查看所有网络接口的属性
iptables -L # 查看防火墙设置
sudo ufw status （查防火墙状态）
route -n # 查看路由表
netstat -lntp # 查看所有监听端口
netstat -antp # 查看所有已经建立的连接
netstat -s # 查看网络统计信息
curl ifconfig.me/all
curl ifconfig.me/host
curl ifconfig.me/ua
curl v4.ifconfig.co # returns my ip address near instantly from the command line regardless of where I call it from



### 进程
ps -ef # 查看所有进程
ps -efw | grep nginx | xsel  # 显示所有命令，连带命令行
ps -u root # 显示root进程用户信息
ps -A # 显示进程信息
pgrep nginx | xargs ps # 查找进程
ps -e | wc -l
echo $SHELL
ps -p $$
echo $$
top # 实时显示进程状态
# mac
sudo /usr/libexec/stackshot -i -u -p <pid>
echo "thread backtrace all" | lldb -p <pid>
# linux
pstack 7013



### 用户
w # 查看活动用户
id <用户名> # 查看指定用户信息
last # 查看用户登录日志
cut -d: -f1 /etc/passwd # 查看系统所有用户
cut -d: -f1 /etc/group # 查看系统所有组
crontab -l # 查看当前用户的计划任务
cat /etc/shells
cat /etc/passwd
cat /etc/group



### 服务
service --status-all
systemctl list-units --type=service
chkconfig --list # 列出所有系统服务
chkconfig --list | grep on # 列出所有启动的系统服务
sysv-rc-conf
sudo systemctl set-default multi-user.target # 开机后进入命令行界面：
sudo systemctl set-default graphical.target # 开机后进入图形界面



### 程序
rpm -qa # 查看所有安装的软件包
dpkg -L unixodbc | xargs -I {} cp {} ~/oudream/1



### mac
dscl . -list /Users
dscl . -list /Groups
dscacheutil -q group 
sudo spctl --master-disable


### network
telnet 192.168.1.1 25
### MAC ADDRESS
第一个是自己的
sudo ifconfig en0 ether a0:99:9b:0f:53:15 ### mac2015
sudo ifconfig en0 ether F0:DE:F1:B4:2A:82 ### thinkpade520
sudo ifconfig en0 ether 28:D2:44:7E:99:E4 ### llb thinkpadt440 
sudo ifconfig en0 ether 5C:51:4F:62:C8:6B ### llb thinkpadt440 - wifi 



### script / asciinema rec / asciinema auth
script
asciinema <command> -h
asciinema rec demo.json
asciinema rec -t "My git tutorial" # Record terminal and upload it to asciinema.org, specifying title:
asciinema play demo.json
asciinema play https://asciinema.org/a/difqlgx86ym6emrmd8u62yqu8
asciicast2gif -t solarized-dark -s 2 -S 1 118274.json demo.gif
-t：自定义名称，如 asciinema rec -t "run first blade app"
-w：暂停时间最多多少秒，如 asciinema rec -w 2.5 demo.json，录制终端保存到本地，暂停时间最多2.5秒



### tmux
tmux rename-session [-t current-name] [new-name]
### screen
screen -S 8890.foo -X sessionname foobars	
CtrlC  + a + [ # 滚动



### remote 
sftp get -r /usr/local/hadoop/tmp /ddd/hadoop/hadoop-3.1.0
scp -r local_folder remote_username@remote_ip:remote_folder 
cat /fff/tmp/000.txt | ssh -X 10.35.191.11 "DISPLAY=:0.0 pbcopy -i"



### tar unzip 
.tar 
解包：tar xvf FileName.tar
打包：tar cvf FileName.tar DirName
（注：tar是打包，不是压缩！）
.gz
解压1：gunzip FileName.gz
解压2：gzip -d FileName.gz
压缩：gzip FileName
.tar.gz 和 .tgz
解压：tar zxvf FileName.tar.gz
压缩：tar zcvf FileName.tar.gz DirName
.bz2
解压1：bzip2 -d FileName.bz2
解压2：bunzip2 FileName.bz2
压缩： bzip2 -z FileName
.tar.bz2
解压：tar jxvf FileName.tar.bz2
压缩：tar jcvf FileName.tar.bz2 DirName
.bz
解压1：bzip2 -d FileName.bz
解压2：bunzip2 FileName.bz
压缩：未知
.tar.bz
解压：tar jxvf FileName.tar.bz
压缩：未知
.Z
解压：uncompress FileName.Z
压缩：compress FileName
.tar.Z
解压：tar Zxvf FileName.tar.Z
压缩：tar Zcvf FileName.tar.Z DirName
.zip
解压：unzip FileName.zip
压缩：zip FileName.zip DirName
.rar
解压：rar x FileName.rar
压缩：rar a FileName.rar DirName 

链接:https://pan.baidu.com/s/1ZOLlbgZLhGOMhR00yvACcg  密码:6chg
链接:https://pan.baidu.com/s/1_2ot-y_rlUKOPR5omV7JQw  密码:cjpo



# export
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8



# host
# hosts所在文件夹：
# Windows 系统hosts位于 C:\Windows\System32\drivers\etc\hosts
# Android（安卓）系统hosts位于 /etc/hosts
# Mac（苹果电脑）系统hosts位于 /etc/hosts
# iPhone（iOS）系统hosts位于 /etc/hosts
# Linux系统hosts位于 /etc/hosts
# 绝大多数Unix系统都是在 /etc/hosts

# 修改hosts后生效方法：
# Windows
# 开始 -> 运行 -> 输入cmd -> 在CMD窗口输入
ipconfig /flushdns

# Linux
# 终端输入
sudo rcnscd restart
# 对于systemd发行版，请使用命令
sudo systemctl restart NetworkManager

# Mac OS X终端输入
sudo killall -HUP mDNSResponder
# Android

# 开启飞行模式 -> 关闭飞行模式
# 通用方法
# 拔网线(断网) -> 插网线(重新连接网络)
# 如不行请清空浏览器缓存（老D建议不要使用国产浏览器，请使用谷歌Chrome浏览器）

sudo shutdown -h +60 # mac
sudo shutdown -P +60 # linux
sudo shutdown -P 1:00 # linux

